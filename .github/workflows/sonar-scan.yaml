name: CI/CD with SonarQube and ZAP

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create and activate virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install flask gunicorn

      - name: Start Flask App in venv
        run: |
          source .venv/bin/activate
          gunicorn -w 4 app:app --daemon


      - name: Start Flask App
        run: |
          gunicorn -w 4 app:app --daemon

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download SonarScanner CLI
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner

      - name: Run SonarScanner
        run: |
          ./sonar-scanner/bin/sonar-scanner \
            -Dsonar.projectKey=my_project_key \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://172.17.0.1:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}


      # - name: Run OWASP ZAP Baseline Scan
      #   run: |
      #     docker run --network="host" owasp/zap2docker-stable zap-baseline.py -t http://localhost:8000 -r zap_report.html

      # - name: Upload ZAP Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: zap-report
      #     path: zap_report.html
